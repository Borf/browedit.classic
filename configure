#!/usr/bin/php
<?
function scandir2($dirname)
{
	$f = scandir($dirname);
	for($i = 0; $i < count($f); $i++)
	{
		if($f[$i] == "." || $f[$i] == "..")
			continue;
		$f[$i] = substr($dirname,4) . $f[$i];
		if($f[$i] != "." && $f[$i] != ".." && is_dir($dirname . $f[$i]))
		{
			$f = array_merge($f, scandir2($dirname . $f[$i] . "/"));
		}
	}
	return $f;

}
$f = scandir2("src/");
for($i = 0; $i < count($f); $i++)
{
	if(substr($f[$i], -4, 4) == ".cpp" || substr($f[$i],-2,2) == ".c")
	{
		$files[] = "src/" . $f[$i];
	}
}

$fp = fopen("Makefile","w");
fputs($fp,
"#!make
LIBS = -lz -lGL -lSDL -lgd -lGLU
INCLUDES = -Isrc -DGRF_STATIC -D__NOXML__
CC = g++
DEFINES = 
CFLAGS = -g

obj/%.o: src/%.cpp
	@echo -e \"    \033[1mCC\\033[1m\\t\\033[22;34m$<\\033[39m\"
	@$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) -c -o $@ $<
obj/%.o: src/wm/%.cpp
	@echo -e \"    \033[1mCC\\033[1m\\t\\033[22;34m$<\\033[39m\"
	@$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) -c -o $@ $<
obj/%.o: src/tinyxml/%.cpp
	@echo -e \"    \033[1mCC\\033[1m\\t\\033[22;34m$<\\033[39m\"
	@$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) -c -o $@ $<
obj/%.o: src/grflib/%.c
	@echo -e \"    \033[1mCC\\033[1m\\t\\033[22;34m$<\\033[39m\"
	@gcc $(CFLAGS) $(INCLUDES) $(DEFINES) -c -o $@ $<
obj/%.o: src/grflib/zlib/%.c
	@echo -e \"    \033[1mCC\\033[1m\\t\\033[22;34m$<\\033[39m\"
	@gcc $(CFLAGS) $(INCLUDES) $(DEFINES) -c -o $@ $<
obj/%.o: src/%.c
	@echo -e \"    \033[1mCC\\033[1m\\t\\033[22;34m$<\\033[39m\"
	@gcc $(CFLAGS) $(INCLUDES) $(DEFINES) -c -o $@ $<

roworldedit:  ");

for($i = 0; $i < count($files); $i++)
	fputs($fp, "obj/" . basename2($files[$i]) . ".o ");
fputs($fp,"

	@echo -e \"    \\033[1mLD\\033[1m\\t\\033[22;35m$@\\033[39m\"
	@$(CC) $(LIBS) $(LDFLAGS) -o $@  ");
	
for($i = 0; $i < count($files); $i++)
	fputs($fp, "obj/" . basename2($files[$i]) . ".o ");

fputs($fp,"\n\n\n\n");

for($i = 0; $i < count($files); $i++)
{
	echo $files[$i] . "\n";
	fputs($fp,"obj/" . basename2($files[$i]).".o:");
	$filesdone = array();
	parsefile($files[$i]);
	for($ii = 0; $ii < count($filesdone); $ii++)
		fputs($fp, " " . $filesdone[$ii]);
	fputs($fp,"\n");
	
}
fputs($fp,"


clean:
	rm -f obj/*.o
");
fclose($fp);
chdir("../..");


function parsefile($filename, $includedir = "")
{
	global $filesdone;
	$filename_ = $filename;
	if (in_array($includedir . $filename, $filesdone))
		return;
	else
		$filesdone[] = $includedir . $filename_;
	

	$dir = getcwd();
	while(stristr($filename, "/"))
	{
		chdir(substr($filename, 0, strpos($filename,"/")));
		$includedir .= substr($filename, 0, strpos($filename,"/")+1);
		$filename = substr($filename,strpos($filename,"/")+1);
	}
	if (is_file($filename))
	{
		$f = file($filename);
		for($i = 0; $i < count($f); $i++)
		{
			$l = trim($f[$i]);
			if (substr($l, 0, 10) == "#include \"")
			{
				$include = substr($l, 10);
				$include = substr($include, 0, -1);
				parsefile($include, $includedir);
			}
		}
	}
	else
	{
		echo "Could not open " . $filename . " in directory " . getcwd() . "\n";
	}
	chdir($dir);
}

function basename2($dir)
{
	$dir = basename($dir);
	return substr($dir, 0, strrpos($dir, "."));
}


system("kill -1 " . getmypid());
?>
done